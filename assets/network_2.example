for (let iteration = 0; iteration < 1; iteration++) {
    let outputLayerError = 0

    for (let i = 0; i < streetlights.shape[0]; i++) {
        let layer_0 = streetlights.slice([i, i + 1])
        let layer_1 = relu(nj.dot(layer_0, weights_0_1))
        let outputLayer = nj.dot(layer_1, weights_1_2)

        outputLayerError = nj.add(outputLayerError, nj.sum(nj.power((nj.subtract(outputLayer, walkVsStop.slice([i, i + 1]))), 2)))

        let layer_2_delta = nj.subtract(outputLayer, walkVsStop.slice([i, i + 1]))
        let layer_1_delta = nj.multiply(layer_2_delta.dot(weights_1_2.T), relu2deriv(layer_1))

        weights_1_2 = nj.subtract(weights_1_2, layer_1.T.dot(layer_2_delta).multiply(alpha))
        weights_0_1 = nj.subtract(weights_0_1, layer_0.T.dot(layer_1_delta).multiply(alpha))
    }

    if (iteration % 10 == 9) {
        console.log(`Error: ${outputLayerError.tolist()}`)
    }
}